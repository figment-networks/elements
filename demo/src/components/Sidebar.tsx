import React from "react";
import { Protocol, Network } from "../types";
import { ToggleGroup } from "./ToggleGroup";

const protocols: Protocol[] = [
  { name: "ETH", id: "ethereum" },
  { name: "SOL", id: "solana" },
  { name: "BTC", id: "babylon" },
];

const networksByProtocol: Record<Protocol["id"], Network[]> = {
  ethereum: [
    { name: "Holesky", id: "holesky" },
    { name: "Mainnet", id: "mainnet", disabled: true },
  ],
  solana: [
    { name: "Devnet", id: "devnet" },
    { name: "Mainnet", id: "mainnet", disabled: true },
  ],
  babylon: [
    { name: "Signet", id: "signet" },
    { name: "Mainnet", id: "mainnet", disabled: true },
  ],
};

const walletDescriptions = {
  default: "WalletConnect, Metamask, Ledger Live, and more.",
  custom: "Provide your own signing function.",
} as const;

const themeOptions = [
  { value: "figment", label: "Figment", disabled: true },
  { value: "basic", label: "Basic", disabled: true },
  { value: "protocol", label: "Protocol", disabled: true },
] as const;

interface SidebarProps {
  primaryColor: string;
  secondaryColor: string;
  onPrimaryColorChange: (color: string) => void;
  onSecondaryColorChange: (color: string) => void;
  walletType: "default" | "custom";
  onWalletTypeChange: (type: "default" | "custom") => void;
  selectedProtocol: Protocol;
  onProtocolSelect: (protocol: Protocol) => void;
  selectedNetwork: Network;
  onNetworkSelect: (network: Network) => void;
}

export function Sidebar({
  walletType,
  onWalletTypeChange,
  selectedProtocol,
  onProtocolSelect,
  selectedNetwork,
  onNetworkSelect,
}: SidebarProps) {
  const networks = networksByProtocol[selectedProtocol.id];

  const walletOptions = [
    { value: "default", label: "Default" },
    {
      value: "custom",
      label: "Custom",
      disabled: selectedProtocol.id === "ethereum",
    },
  ] as const;

  React.useEffect(() => {
    // When protocol changes, select the first non-disabled network
    const defaultNetwork = networks.find((n) => !n.disabled) || networks[0];
    onNetworkSelect(defaultNetwork);
  }, [selectedProtocol.id]);

  return (
    <div className="w-96 h-screen bg-[#F9F9F9] p-6 flex gap-8 flex-col">
      <div className="mb-8">
        <svg
          width="122"
          height="40"
          viewBox="0 0 122 40"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_222_441)">
            <path d="M40 0H0V40H40V0Z" fill="#FFF850" />
            <path
              d="M17.0257 14.4547V19.2447H26.4822V22.232H17.0257V30.1829H13.668V11.418H27.0015V14.4547H17.0257Z"
              fill="#111111"
            />
          </g>
          <g clipPath="url(#clip1_222_441)">
            <path
              d="M54.4444 13.166V16.7858H60.5486V19.0118H54.4444V24.4416H52V10.9331H61.2874V13.1591H54.4444V13.166Z"
              fill="#111111"
            />
            <path
              d="M63.0898 24.4352V14.5327H65.4997V24.4352H63.0898Z"
              fill="#111111"
            />
            <path
              d="M76.7684 25.7518C76.7684 26.3967 76.6234 26.9376 76.3334 27.3676C76.0433 27.7975 75.6705 28.1373 75.2147 28.3869C74.759 28.6366 74.248 28.81 73.6818 28.907C73.1156 29.0111 72.5562 29.0596 72.0107 29.0596C71.4031 29.0596 70.8023 29.018 70.2016 28.9278C69.6008 28.8377 69.0415 28.6089 68.5236 28.2413C68.1438 27.9778 67.8538 27.6658 67.6467 27.3052C67.4395 26.9446 67.3359 26.5354 67.3359 26.0639C67.3359 25.6339 67.4395 25.2317 67.6398 24.8711C67.84 24.5105 68.13 24.2332 68.5098 24.039C68.1922 23.8587 67.9505 23.616 67.7779 23.3039C67.6052 22.9919 67.5224 22.6729 67.5224 22.34C67.5224 21.4871 67.916 20.8214 68.6963 20.3429C68.3924 20.0378 68.1507 19.6841 67.9781 19.275C67.7986 18.8658 67.7157 18.4151 67.7157 17.9019C67.7157 17.3194 67.8262 16.7994 68.0403 16.3417C68.2543 15.884 68.5443 15.5026 68.9103 15.1975C69.2763 14.8924 69.7044 14.6635 70.1878 14.504C70.6711 14.3445 71.1959 14.2682 71.7483 14.2682C72.1557 14.2682 72.5424 14.3237 72.9222 14.4277C73.302 14.5387 73.6542 14.6843 73.9856 14.8716C74.1997 14.4416 74.4828 14.1296 74.8349 13.9285C75.1871 13.7343 75.5738 13.6372 75.9881 13.6372H76.3126C76.4507 13.6372 76.5612 13.6511 76.6372 13.6719V15.5165L76.4507 15.4957C76.1745 15.4957 75.926 15.5373 75.705 15.6274C75.484 15.7176 75.3321 15.884 75.2631 16.1198C75.6014 16.6815 75.774 17.2778 75.774 17.9089C75.774 18.4775 75.6636 18.9907 75.4426 19.4345C75.2216 19.8783 74.9247 20.2527 74.5656 20.5579C74.1997 20.863 73.7715 21.0988 73.2882 21.2652C72.7979 21.4316 72.2938 21.5148 71.7621 21.5148C71.2028 21.5148 70.678 21.4247 70.1671 21.2513C70.0566 21.3137 69.9461 21.4108 69.8356 21.5287C69.7251 21.6466 69.6768 21.7922 69.6768 21.9586C69.6768 22.2499 69.7942 22.4441 70.0289 22.5411C70.2637 22.6382 70.5054 22.6868 70.7609 22.6868H72.3905C72.6322 22.6868 72.8877 22.6868 73.1639 22.6937C73.4401 22.7006 73.7232 22.7284 74.0063 22.77C74.2894 22.8116 74.5656 22.8809 74.8418 22.9711C75.1111 23.0612 75.3597 23.1861 75.5876 23.3525C76.0157 23.6437 76.3264 23.9974 76.506 24.3996C76.6855 24.8157 76.7753 25.2595 76.7753 25.738L76.7684 25.7518ZM74.5311 25.8073C74.5311 25.5022 74.4482 25.2664 74.2825 25.1C74.1168 24.9336 73.9165 24.8157 73.6887 24.7394C73.4539 24.6631 73.1984 24.6215 72.9291 24.6076C72.6598 24.5938 72.4112 24.5868 72.1834 24.5868H70.3259C70.0704 24.6631 69.8632 24.8087 69.6906 25.0168C69.518 25.2248 69.4351 25.4883 69.4351 25.8073C69.4351 26.1263 69.518 26.369 69.6906 26.5493C69.8632 26.7296 70.0704 26.8614 70.3259 26.9584C70.5814 27.0555 70.8507 27.111 71.1407 27.1387C71.4307 27.1665 71.6931 27.1734 71.9141 27.1734C72.1557 27.1734 72.425 27.1665 72.7289 27.1457C73.0327 27.1249 73.3158 27.0763 73.5782 26.9862C73.8406 26.896 74.0685 26.7573 74.248 26.577C74.4275 26.3898 74.5242 26.1332 74.5242 25.8073H74.5311ZM73.4884 17.9227C73.4884 17.3888 73.3296 16.9519 73.0258 16.5983C72.7151 16.2446 72.2869 16.0782 71.7483 16.0782C71.2097 16.0782 70.7816 16.2515 70.4709 16.5983C70.1601 16.945 70.0082 17.3888 70.0082 17.9227C70.0082 18.4567 70.1601 18.8936 70.4709 19.2403C70.7816 19.5801 71.2097 19.7535 71.7483 19.7535C72.2869 19.7535 72.7151 19.5801 73.0258 19.2403C73.3365 18.9005 73.4884 18.4567 73.4884 17.9227Z"
              fill="#111111"
            />
            <path
              d="M89.7676 24.4353V18.2843C89.7676 17.6741 89.664 17.2025 89.4569 16.8627C89.2497 16.5299 88.8492 16.3565 88.2554 16.3565C87.917 16.3565 87.6201 16.4397 87.3853 16.5923C87.1436 16.7518 86.9434 16.9598 86.7915 17.2233C86.6326 17.4869 86.5153 17.7712 86.4393 18.0902C86.3633 18.4091 86.3288 18.7212 86.3288 19.0263V24.4353H83.9811V18.2843C83.9811 17.6741 83.8775 17.2025 83.6703 16.8627C83.4632 16.5299 83.0627 16.3565 82.4688 16.3565C82.1305 16.3565 81.8336 16.4397 81.5988 16.5923C81.3571 16.7518 81.1569 16.9598 80.9911 17.2233C80.8254 17.4869 80.708 17.7712 80.6321 18.0902C80.5561 18.4091 80.5216 18.7212 80.5216 19.0263V24.4353H78.1738V14.5327H80.1418L80.3282 15.8503C80.6044 15.3926 80.9773 15.0182 81.4469 14.7269C81.9164 14.4357 82.4757 14.29 83.1317 14.29C83.8291 14.29 84.4092 14.4357 84.8787 14.72C85.3483 15.0043 85.7074 15.4065 85.9559 15.9127C86.246 15.3926 86.6465 14.9904 87.1574 14.713C87.6684 14.4357 88.2623 14.297 88.9321 14.297C89.9955 14.297 90.7895 14.616 91.3281 15.2609C91.8667 15.9058 92.1361 16.7379 92.1361 17.7642V24.4491H89.7814L89.7676 24.4353Z"
              fill="#111111"
            />
            <path
              d="M102.887 19.5596C102.874 19.6497 102.867 19.733 102.867 19.8092V20.2253H96.2723C96.2723 20.6067 96.3344 20.9673 96.4518 21.314C96.5692 21.6538 96.7556 21.9451 96.9904 22.1739C97.1699 22.3403 97.3771 22.479 97.605 22.6038C97.8397 22.7217 98.1159 22.7841 98.4474 22.7841C98.7788 22.7841 99.0689 22.7495 99.2898 22.6801C99.5108 22.6108 99.711 22.486 99.8837 22.3126C100.112 22.0838 100.27 21.8064 100.36 21.4735H102.632C102.604 21.7648 102.508 22.0838 102.335 22.4374C102.162 22.7841 101.983 23.0754 101.796 23.3042C101.382 23.7966 100.878 24.1572 100.298 24.3722C99.7179 24.5871 99.1103 24.6981 98.4819 24.6981C97.7983 24.6981 97.2114 24.5871 96.7073 24.3652C96.2101 24.1433 95.7613 23.8451 95.3677 23.4776C94.8774 22.9922 94.4976 22.4166 94.2422 21.744C93.9798 21.0713 93.8555 20.3293 93.8555 19.518C93.8555 18.7066 93.9729 17.9785 94.2076 17.2989C94.4424 16.6194 94.8015 16.0369 95.2779 15.5584C95.6439 15.177 96.0927 14.8719 96.6175 14.643C97.1423 14.4142 97.7431 14.3032 98.4267 14.3032C99.1586 14.3032 99.8422 14.4488 100.478 14.747C101.106 15.0452 101.624 15.5029 102.031 16.127C102.397 16.6748 102.632 17.2296 102.729 17.7913C102.825 18.353 102.881 18.9494 102.881 19.5665L102.887 19.5596ZM100.519 18.4917C100.505 17.7705 100.305 17.188 99.9113 16.758C99.7456 16.5777 99.5453 16.4391 99.2967 16.342C99.0481 16.238 98.7581 16.1894 98.4129 16.1894C98.0469 16.1894 97.7224 16.2588 97.4461 16.3974C97.1699 16.5361 96.9421 16.7234 96.7625 16.9522C96.583 17.1672 96.4587 17.396 96.3828 17.6387C96.3068 17.8814 96.2654 18.1658 96.2516 18.4986H100.519V18.4917Z"
              fill="#111111"
            />
            <path
              d="M110.747 24.4349V18.3602C110.747 17.7777 110.63 17.32 110.409 16.9872C110.181 16.6543 109.753 16.4948 109.117 16.4948C108.703 16.4948 108.351 16.6127 108.075 16.8485C107.798 17.0843 107.577 17.3824 107.412 17.7569C107.246 18.1244 107.149 18.5544 107.129 19.0398C107.101 19.5322 107.087 19.9829 107.087 20.399V24.4349H104.719V14.5324H106.707L106.88 15.8083C107.17 15.2882 107.584 14.8999 108.123 14.6572C108.662 14.4075 109.214 14.2827 109.78 14.2827C110.312 14.2827 110.781 14.3729 111.196 14.5462C111.603 14.7265 111.955 14.9692 112.238 15.2813C112.522 15.5933 112.743 15.9678 112.894 16.4047C113.046 16.8416 113.122 17.3131 113.122 17.8263V24.4349H110.754H110.747Z"
              fill="#111111"
            />
            <path
              d="M121.111 24.3026C120.428 24.4829 119.751 24.5661 119.081 24.5661C118.08 24.5661 117.334 24.2957 116.844 23.7548C116.354 23.2139 116.105 22.4719 116.105 21.5149V16.4874H114.303V14.5249H116.105V12.0216L118.473 11.4321V14.5319H120.959V16.4943H118.473V21.3138C118.473 21.6952 118.563 21.9726 118.736 22.146C118.915 22.3193 119.192 22.4026 119.571 22.4026C119.827 22.4026 120.062 22.4025 120.283 22.3817C120.504 22.3679 120.78 22.3471 121.104 22.3055V24.3026H121.111Z"
              fill="#111111"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M65.6913 12.3411C65.6913 11.5991 65.0905 10.9473 64.2826 10.9473C63.4747 10.9473 62.8809 11.5991 62.8809 12.3411C62.8809 13.0831 63.4609 13.7003 64.2826 13.7003C65.1043 13.7003 65.6844 13.1178 65.6844 12.3411H65.6913Z"
              fill="#111111"
            />
          </g>
          <defs>
            <clipPath id="clip0_222_441">
              <rect width="40" height="40" fill="white" />
            </clipPath>
            <clipPath id="clip1_222_441">
              <rect
                width="69.1137"
                height="18.1338"
                fill="white"
                transform="translate(52 10.9331)"
              />
            </clipPath>
          </defs>
        </svg>
      </div>

      <ToggleGroup
        label="PROTOCOL"
        value={selectedProtocol.id}
        onChange={(id) => {
          const protocol = protocols.find((p) => p.id === id);
          if (protocol) onProtocolSelect(protocol);
        }}
        items={protocols.map((p) => ({
          value: p.id,
          label: p.name,
        }))}
        variant="horizontal"
      />

      <ToggleGroup
        label="NETWORK"
        value={selectedNetwork.id}
        onChange={(id) => {
          const network = networks.find((n) => n.id === id);
          if (network && !network.disabled) onNetworkSelect(network);
        }}
        items={networks.map((n) => ({
          value: n.id,
          label: n.name,
          disabled: n.disabled,
        }))}
        variant="horizontal"
        showTooltip={true}
      />

      <div className="">
        <ToggleGroup
          label="WALLET OPTIONS"
          value={walletType}
          onChange={onWalletTypeChange}
          items={walletOptions}
          variant="horizontal"
        />
        <p className="text-sm text-center italic mt-4 text-[#6F7471] font-inter px-2">
          {walletDescriptions[walletType]}
        </p>
      </div>

      <div>
        <h2 className="text-base text-[#3A3D3C] mb-2 font-inter">THEME</h2>
        <ToggleGroup
          label=""
          value="figment"
          onChange={() => {}}
          items={themeOptions}
          variant="horizontal"
          showTooltip={true}
        />
      </div>
    </div>
  );
}
